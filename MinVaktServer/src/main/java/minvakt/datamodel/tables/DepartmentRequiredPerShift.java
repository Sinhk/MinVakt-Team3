/*
 * This file is generated by jOOQ.
*/
package minvakt.datamodel.tables;


import minvakt.datamodel.GScrum03;
import minvakt.datamodel.Keys;
import minvakt.datamodel.tables.records.DepartmentRequiredPerShiftRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DepartmentRequiredPerShift extends TableImpl<DepartmentRequiredPerShiftRecord> {

    private static final long serialVersionUID = 562598517;

    /**
     * The reference instance of <code>g_scrum03.department_required_per_shift</code>
     */
    public static final DepartmentRequiredPerShift DEPARTMENT_REQUIRED_PER_SHIFT = new DepartmentRequiredPerShift();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DepartmentRequiredPerShiftRecord> getRecordType() {
        return DepartmentRequiredPerShiftRecord.class;
    }

    /**
     * The column <code>g_scrum03.department_required_per_shift.id</code>.
     */
    public final TableField<DepartmentRequiredPerShiftRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>g_scrum03.department_required_per_shift.department_id</code>.
     */
    public final TableField<DepartmentRequiredPerShiftRecord, Integer> DEPARTMENT_ID = createField("department_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>g_scrum03.department_required_per_shift.shift_id</code>.
     */
    public final TableField<DepartmentRequiredPerShiftRecord, Integer> SHIFT_ID = createField("shift_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>g_scrum03.department_required_per_shift.amount</code>.
     */
    public final TableField<DepartmentRequiredPerShiftRecord, Integer> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>g_scrum03.department_required_per_shift</code> table reference
     */
    public DepartmentRequiredPerShift() {
        this("department_required_per_shift", null);
    }

    /**
     * Create an aliased <code>g_scrum03.department_required_per_shift</code> table reference
     */
    public DepartmentRequiredPerShift(String alias) {
        this(alias, DEPARTMENT_REQUIRED_PER_SHIFT);
    }

    private DepartmentRequiredPerShift(String alias, Table<DepartmentRequiredPerShiftRecord> aliased) {
        this(alias, aliased, null);
    }

    private DepartmentRequiredPerShift(String alias, Table<DepartmentRequiredPerShiftRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GScrum03.G_SCRUM03;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DepartmentRequiredPerShiftRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DEPARTMENT_REQUIRED_PER_SHIFT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DepartmentRequiredPerShiftRecord> getPrimaryKey() {
        return Keys.KEY_DEPARTMENT_REQUIRED_PER_SHIFT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DepartmentRequiredPerShiftRecord>> getKeys() {
        return Arrays.<UniqueKey<DepartmentRequiredPerShiftRecord>>asList(Keys.KEY_DEPARTMENT_REQUIRED_PER_SHIFT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DepartmentRequiredPerShiftRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DepartmentRequiredPerShiftRecord, ?>>asList(Keys.DEPARTMENT_REQUIRED_PER_SHIFT_DEPARTMENT_ID_FK, Keys.DEPARTMENT_REQUIRED_PER_SHIFT_SHIFT_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DepartmentRequiredPerShift as(String alias) {
        return new DepartmentRequiredPerShift(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DepartmentRequiredPerShift rename(String name) {
        return new DepartmentRequiredPerShift(name, null);
    }
}
