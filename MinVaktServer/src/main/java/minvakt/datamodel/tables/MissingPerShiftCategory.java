/*
 * This file is generated by jOOQ.
*/
package minvakt.datamodel.tables;


import java.math.BigInteger;

import javax.annotation.Generated;

import minvakt.datamodel.GScrum03;
import minvakt.datamodel.tables.records.MissingPerShiftCategoryRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MissingPerShiftCategory extends TableImpl<MissingPerShiftCategoryRecord> {

    private static final long serialVersionUID = -1013372409;

    /**
     * The reference instance of <code>g_scrum03.missing_per_shift_category</code>
     */
    public static final MissingPerShiftCategory MISSING_PER_SHIFT_CATEGORY = new MissingPerShiftCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MissingPerShiftCategoryRecord> getRecordType() {
        return MissingPerShiftCategoryRecord.class;
    }

    /**
     * The column <code>g_scrum03.missing_per_shift_category.shift_id</code>.
     */
    public final TableField<MissingPerShiftCategoryRecord, Integer> SHIFT_ID = createField("shift_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>g_scrum03.missing_per_shift_category.category_id</code>.
     */
    public final TableField<MissingPerShiftCategoryRecord, Short> CATEGORY_ID = createField("category_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>g_scrum03.missing_per_shift_category.count_assigned</code>.
     */
    public final TableField<MissingPerShiftCategoryRecord, Long> COUNT_ASSIGNED = createField("count_assigned", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>g_scrum03.missing_per_shift_category.count_required</code>.
     */
    public final TableField<MissingPerShiftCategoryRecord, Long> COUNT_REQUIRED = createField("count_required", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>g_scrum03.missing_per_shift_category.missing</code>.
     */
    public final TableField<MissingPerShiftCategoryRecord, BigInteger> MISSING = createField("missing", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(21), this, "");

    /**
     * Create a <code>g_scrum03.missing_per_shift_category</code> table reference
     */
    public MissingPerShiftCategory() {
        this("missing_per_shift_category", null);
    }

    /**
     * Create an aliased <code>g_scrum03.missing_per_shift_category</code> table reference
     */
    public MissingPerShiftCategory(String alias) {
        this(alias, MISSING_PER_SHIFT_CATEGORY);
    }

    private MissingPerShiftCategory(String alias, Table<MissingPerShiftCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private MissingPerShiftCategory(String alias, Table<MissingPerShiftCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GScrum03.G_SCRUM03;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MissingPerShiftCategory as(String alias) {
        return new MissingPerShiftCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MissingPerShiftCategory rename(String name) {
        return new MissingPerShiftCategory(name, null);
    }
}
