/*
 * This file is generated by jOOQ.
*/
package minvakt.datamodel.tables;


import minvakt.datamodel.GScrum03;
import minvakt.datamodel.Keys;
import minvakt.datamodel.tables.records.ShiftOvertimeRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShiftOvertime extends TableImpl<ShiftOvertimeRecord> {

    private static final long serialVersionUID = -738703995;

    /**
     * The reference instance of <code>g_scrum03.shift_overtime</code>
     */
    public static final ShiftOvertime SHIFT_OVERTIME = new ShiftOvertime();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShiftOvertimeRecord> getRecordType() {
        return ShiftOvertimeRecord.class;
    }

    /**
     * The column <code>g_scrum03.shift_overtime.id</code>.
     */
    public final TableField<ShiftOvertimeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>g_scrum03.shift_overtime.shift_assignment_id</code>.
     */
    public final TableField<ShiftOvertimeRecord, Integer> SHIFT_ASSIGNMENT_ID = createField("shift_assignment_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>g_scrum03.shift_overtime.minutes</code>.
     */
    public final TableField<ShiftOvertimeRecord, Integer> MINUTES = createField("minutes", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>g_scrum03.shift_overtime</code> table reference
     */
    public ShiftOvertime() {
        this("shift_overtime", null);
    }

    /**
     * Create an aliased <code>g_scrum03.shift_overtime</code> table reference
     */
    public ShiftOvertime(String alias) {
        this(alias, SHIFT_OVERTIME);
    }

    private ShiftOvertime(String alias, Table<ShiftOvertimeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShiftOvertime(String alias, Table<ShiftOvertimeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GScrum03.G_SCRUM03;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShiftOvertimeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHIFT_OVERTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShiftOvertimeRecord> getPrimaryKey() {
        return Keys.KEY_SHIFT_OVERTIME_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShiftOvertimeRecord>> getKeys() {
        return Arrays.<UniqueKey<ShiftOvertimeRecord>>asList(Keys.KEY_SHIFT_OVERTIME_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ShiftOvertimeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ShiftOvertimeRecord, ?>>asList(Keys.SHIFT_OVERTIME_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftOvertime as(String alias) {
        return new ShiftOvertime(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShiftOvertime rename(String name) {
        return new ShiftOvertime(name, null);
    }
}
