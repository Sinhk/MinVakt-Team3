/*
 * This file is generated by jOOQ.
*/
package minvakt.datamodel.tables.records;


import minvakt.datamodel.tables.ShiftAssignment;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import javax.persistence.*;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Entity
@Table(name = "shift_assignment", schema = "g_scrum03")
public class ShiftAssignmentRecord extends UpdatableRecordImpl<ShiftAssignmentRecord> implements Record5<Integer, Integer, Integer, Boolean, String> {

    private static final long serialVersionUID = -1742038;

    /**
     * Setter for <code>g_scrum03.shift_assignment.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>g_scrum03.shift_assignment.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 10)
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>g_scrum03.shift_assignment.shift_id</code>.
     */
    public void setShiftId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>g_scrum03.shift_assignment.shift_id</code>.
     */
    @Column(name = "shift_id", nullable = false, precision = 10)
    public Integer getShiftId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>g_scrum03.shift_assignment.employee_id</code>.
     */
    public void setEmployeeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>g_scrum03.shift_assignment.employee_id</code>.
     */
    @Column(name = "employee_id", nullable = false, precision = 10)
    public Integer getEmployeeId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>g_scrum03.shift_assignment.absent</code>.
     */
    public void setAbsent(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>g_scrum03.shift_assignment.absent</code>.
     */
    @Column(name = "absent", nullable = false)
    public Boolean getAbsent() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>g_scrum03.shift_assignment.comment_for_absence</code>.
     */
    public void setCommentForAbsence(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>g_scrum03.shift_assignment.comment_for_absence</code>.
     */
    @Column(name = "comment_for_absence", length = 100)
    public String getCommentForAbsence() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Boolean, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Boolean, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ShiftAssignment.SHIFT_ASSIGNMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ShiftAssignment.SHIFT_ASSIGNMENT.SHIFT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return ShiftAssignment.SHIFT_ASSIGNMENT.EMPLOYEE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return ShiftAssignment.SHIFT_ASSIGNMENT.ABSENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ShiftAssignment.SHIFT_ASSIGNMENT.COMMENT_FOR_ABSENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getShiftId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getEmployeeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getAbsent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCommentForAbsence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftAssignmentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftAssignmentRecord value2(Integer value) {
        setShiftId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftAssignmentRecord value3(Integer value) {
        setEmployeeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftAssignmentRecord value4(Boolean value) {
        setAbsent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftAssignmentRecord value5(String value) {
        setCommentForAbsence(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShiftAssignmentRecord values(Integer value1, Integer value2, Integer value3, Boolean value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShiftAssignmentRecord
     */
    public ShiftAssignmentRecord() {
        super(ShiftAssignment.SHIFT_ASSIGNMENT);
    }

    /**
     * Create a detached, initialised ShiftAssignmentRecord
     */
    public ShiftAssignmentRecord(Integer id, Integer shiftId, Integer employeeId, Boolean absent, String commentForAbsence) {
        super(ShiftAssignment.SHIFT_ASSIGNMENT);

        set(0, id);
        set(1, shiftId);
        set(2, employeeId);
        set(3, absent);
        set(4, commentForAbsence);
    }
}
