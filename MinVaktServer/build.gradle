buildscript {
    ext {
        springBootVersion = '1.4.3.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

sourceCompatibility = 1.8

jar {
    baseName = 'MinVakt'
    //version = '0.1.0-SNAPSHOT'
}

repositories {
    jcenter()
    mavenCentral()
}
def defaultEncoding = 'UTF-8'

compileJava {
    options.encoding = defaultEncoding  // affects *.java under src/main/java
    // alternative: "file.encoding" property
    compileTestJava {
        options.encoding = defaultEncoding  // affects *.java under src/test/java
        // alternative: "file.encoding" property
    }
}
springBoot {
    mainClass = "minvakt.Application"
}
dependencies {
    // https://mvnrepository.com/artifact/javax.mail/mail
    compile group: 'javax.mail', name: 'mail', version: '1.4.1'

    compile("org.springframework.boot:spring-boot-starter-web")
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    //compile('org.springframework.boot:spring-boot-starter-actuator')

    compile 'org.hibernate:hibernate-java8:5.+'
    compile 'org.hibernate:hibernate-core:5.+'
    compile 'org.hibernate:hibernate-entitymanager:5.+'


    compile 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.8.5'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.8.5'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.5'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.8.5'

    compile "org.thymeleaf:thymeleaf:3.0.+"
    compile "org.thymeleaf:thymeleaf-spring4:3.0.+"
    compile "org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.+"
    compile "org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.+"

    compile("org.springframework.boot:spring-boot-devtools")

    compile 'org.jooq:jooq:3.9.+'
    compile 'org.jooq:jooq-meta:3.9.+'
    compile 'org.jooq:jooq-codegen:3.9.1'

    //Auth
    compile 'io.jsonwebtoken:jjwt:0.7.+'
    compile 'org.jasypt:jasypt:1.9.+'
    compile 'io.codearte.jfairy:jfairy:0.5.5'

    runtime('mysql:mysql-connector-java')
    /*//DB
    compile 'org.mariadb.jdbc:mariadb-java-client:1.2.0'
    compile 'org.hibernate:hibernate-entitymanager:5.2.2.Final'
    compile 'org.hibernate:hibernate-c3p0:5.2.2.Final'*/

    /*compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.23.2'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.23.2'

    compile 'org.eclipse.jetty:jetty-servlet:9.3.11.v20160721'
    compile 'org.eclipse.jetty:jetty-webapp:9.3.11.v20160721'*/

    testCompile group: 'com.h2database', name: 'h2', version: '1.4.193'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    //testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('com.jayway.jsonpath:json-path')
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-core:2.+'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
    
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['minvakt/config/**',
                              'minvakt/controller/data/**',
                              'minvakt/datamodel/**',
                              'minvakt/managers/**',
                              'minvakt/repos/**',
                              'minvakt/Application**',
                              'minvakt/ServletInitializer**',
                              'minvakt/SpringWebApplicationInitializer**'])  // All these files are auto generated and does not need testing
        })
    }
}
check.dependsOn jacocoTestReport

task stage {
    dependsOn assemble
}

bootRun {
    addResources = true
}

